{"version":3,"sources":["UltimateTicTacToe.js","App.js","index.js"],"names":["Square","props","state","color","e","xIsNext","target","style","backgroundColor","value","defaultColor","this","colorSelection","fontSize","className","onClick","handleClick","parent","index","onMouseOver","mouseOver","onMouseOut","mouseOut","React","Component","TicTacToeBoard","border","active","squares","map","square","ParentBoard","HistoryBoard","Array","fill","forEach","element","sIndex","flattenBoard","opacity","position","lastMoveIndex","lastMove","child","boardStyle","outline","highlighted","zIndex","UltimateTicTacToe","handleResize","maxCount","Math","floor","window","innerWidth","setState","status","history","historyIndex","lines","i","length","a","b","c","checkLocalVictory","slice","current","row","checkBoardVictory","localVictor","concat","winner","statusStyle","background","statusText","count","min","j","max","rewind","rowIndex","App","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4b1f236.chunk.js","sourcesContent":["import React from 'react';\r\nimport './UltimateTicTacToe.css';\r\n\r\nclass Square extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            color: \"\"\r\n        };\r\n    }\r\n\r\n    mouseOver(e, xIsNext){\r\n        if (xIsNext)\r\n            e.target.style.backgroundColor = \"red\";\r\n        else\r\n            e.target.style.backgroundColor = \"blue\";\r\n    }\r\n\r\n    mouseOut(e, value, defaultColor){\r\n        e.target.style.backgroundColor = this.colorSelection(value, defaultColor);\r\n    }\r\n\r\n    colorSelection(value, defaultColor){\r\n        let color = defaultColor;\r\n        if (value === \"X\") {\r\n            color = \"red\"\r\n        } else if (value === \"O\") {\r\n            color = \"blue\"\r\n        }\r\n        return color;\r\n    }\r\n\r\n    render() {\r\n        \r\n        let style = {\r\n            backgroundColor: this.colorSelection(this.props.value, this.state.color),\r\n            color: \"white\",\r\n            fontSize: \"16px\"\r\n        }\r\n        \r\n        return (<button className=\"square\" style={style} onClick={() => this.props.handleClick(this.props.parent, this.props.index)} onMouseOver={(e) => this.mouseOver(e, this.props.xIsNext)} onMouseOut={(e) => this.mouseOut(e, this.props.value, this.state.color)}>\r\n            {this.props.value}\r\n        </button>)\r\n    }\r\n}\r\n\r\nfunction TicTacToeBoard(props) {\r\n    let active = props.parent === props.active;\r\n    let style = {\r\n        border: \"medium rgba(0, 0, 0, 0) solid\"\r\n    };\r\n    if (active) {\r\n        style.border = \"medium green dashed\"\r\n    }\r\n    return (<div className=\"ticTacToe-board\" style={style}>\r\n        {props.squares.map((square, index) => <Square key={index} parent={props.parent} index={index} handleClick={props.handleClick} value={square} xIsNext={props.xIsNext}/>)}\r\n    </div>)\r\n}\r\n\r\nfunction ParentBoard(props) {\r\n    return (props.squares.map((square, index) => \r\n    <TicTacToeBoard key={index} parent={index} handleClick={props.handleClick} squares={square}  xIsNext={props.xIsNext} active={props.active}/>))\r\n\r\n}\r\n\r\nfunction HistoryBoard(props) {\r\n    let squares = Array(81).fill(null);\r\n    props.squares.forEach((element, index) => {\r\n        element.forEach((square, sIndex) => {\r\n            squares[flattenBoard(index, sIndex)] = square;\r\n        })\r\n    });\r\n    const opacity = props.position + 0.2; \r\n\r\n    const lastMoveIndex = flattenBoard(props.lastMove.parent, props.lastMove.child);\r\n\r\n    let boardStyle = {\r\n        outline: \"\"\r\n    }\r\n    if (props.highlighted){\r\n        boardStyle.outline = \"medium solid red\";\r\n    }\r\n\r\n    return(<div onClick={props.onClick} className=\"history-board\" style={boardStyle}>\r\n        {squares.map((element, index) => {\r\n            let style = {\r\n                border: \"thin black solid\",\r\n                backgroundColor: \"\",\r\n                opacity: opacity,\r\n                outline: \"\",\r\n                zIndex: -1\r\n            }\r\n            if (element === \"X\") {\r\n                style.backgroundColor = \"red\"\r\n            } else if (element === \"O\") {\r\n                style.backgroundColor = \"blue\"\r\n            } else {\r\n                style.backgroundColor = \"\";\r\n            }\r\n            if (index === lastMoveIndex){\r\n                style.outline = \"medium solid green\";\r\n                style.zIndex = 1;\r\n            }\r\n            return (<div key={index} style={style}></div>)})}\r\n    </div>)\r\n}\r\n\r\nclass UltimateTicTacToe extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let maxCount = Math.floor(window.innerWidth / 110);\r\n        this.state = {\r\n            status: null,\r\n            history: [{\r\n                    squares: Array(9).fill(null).map(() => Array(9).fill(null)),\r\n                    xIsNext: true,\r\n                    active: -1,\r\n                    lastMove: {\r\n                        parent: -1,\r\n                        child: -1\r\n                    }\r\n                }\r\n            ],\r\n            historyIndex: 0,\r\n            maxCount: 100\r\n\r\n        };\r\n    }\r\n\r\n    handleResize = (e) => {\r\n        let maxCount = Math.floor(window.innerWidth / 110);\r\n        this.setState({\r\n            maxCount: maxCount\r\n        })\r\n    };\r\n\r\n    componentDidMount() {\r\n        //window.addEventListener(\"resize\", this.handleResize);\r\n    }\r\n    \r\n    checkLocalVictory(squares){\r\n        const lines = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6],\r\n          ];\r\n          for (let i = 0; i < lines.length; i++) {\r\n            const [a, b, c] = lines[i];\r\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n              return squares[a];\r\n            }\r\n          }\r\n          return null;\r\n    }\r\n\r\n    checkBoardVictory(squares) {\r\n        const lines = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6],\r\n          ];\r\n          for (let i = 0; i < lines.length; i++) {\r\n            const [a, b, c] = lines[i];\r\n            if (this.checkLocalVictory(squares[a]) && this.checkLocalVictory(squares[a]) === this.checkLocalVictory(squares[b]) && this.checkLocalVictory(squares[a]) === this.checkLocalVictory(squares[c])) {\r\n                return this.checkLocalVictory(squares[a]);\r\n            }\r\n          }\r\n          return null;\r\n    }\r\n\r\n    handleClick(parent, child){\r\n        const history = this.state.history.slice(0, this.state.historyIndex + 1);\r\n        const current = history[this.state.historyIndex];\r\n        const squares = deepSlice(current.squares);\r\n        // Only allow moves within current active board but only if active not equal to -1\r\n        // If square has already been set, do nothing\r\n        // If board being played has already been won, do nothing\r\n        // If entire board has been won, do nothing\r\n        if ((parent !== current.active && current.active !== -1) || squares[parent][child] || this.checkLocalVictory(squares[parent]) || this.checkBoardVictory(squares)) {\r\n            return;\r\n        }\r\n        squares[parent][child] = current.xIsNext ? 'X' : 'O';\r\n        \r\n        const OBoard = ['O','O','O','O',null,'O','O','O','O'];\r\n        const XBoard = ['X',null, 'X', null, 'X', null, 'X', null, 'X'];\r\n\r\n        const localVictor = this.checkLocalVictory(squares[parent]);\r\n        if (localVictor === 'X'){\r\n            squares[parent] = XBoard;\r\n        } else if (localVictor === 'O'){\r\n            squares[parent] = OBoard;\r\n        }\r\n        let active = child;\r\n        if (this.checkLocalVictory(squares[active]))\r\n            active = -1;\r\n\r\n        this.setState({\r\n            history: history.concat([{\r\n                        squares: squares,\r\n                        xIsNext: !current.xIsNext,\r\n                        active: active,\r\n                        lastMove: {\r\n                            parent: parent,\r\n                            child: child\r\n                        }\r\n                    }]),\r\n            historyIndex: this.state.historyIndex + 1\r\n        })\r\n    }\r\n\r\n    rewind(index){\r\n        //const index = Math.max(this.state.history.length - this.state.maxCount + i, i);\r\n        this.setState({\r\n            historyIndex: index\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.historyIndex];\r\n        const squares = current.squares;\r\n\r\n        let winner = this.checkBoardVictory(squares)\r\n        let statusStyle = {\r\n            background: \"rgb(105, 105, 105)\"\r\n        }\r\n        let statusText = \"No Winner Yet!\"\r\n        if (winner === 'X') {\r\n            statusStyle.background = \"rgb(218, 55, 55)\";\r\n            statusText = \"X is the Winner!\"\r\n        } else if (winner === 'O') {\r\n            statusStyle.background = \"rgb(12, 44, 150)\";\r\n            statusText = \"O is the Winner!\"\r\n        }\r\n        let count = Math.min(this.state.maxCount, history.length);\r\n        return (\r\n            <div className=\"ultimateTicTacToe\">\r\n                <div className=\"infobox\">\r\n                    <div style={statusStyle} className=\"status\">\r\n                        {statusText}\r\n                    </div>\r\n                </div>\r\n                <div className=\"ultimateTicTacToe-board\">\r\n                    <ParentBoard squares={squares} handleClick={(i , j) => this.handleClick(i, j)} xIsNext={current.xIsNext} active={current.active}/>\r\n                </div>\r\n                <div className=\"ultimateTicTacToe-history\">\r\n                    {history.slice(-count).map((element, i) => {\r\n                        const index = Math.max(this.state.history.length - this.state.maxCount + i, i);\r\n                        return <HistoryBoard key={i} highlighted={index === this.state.historyIndex} onClick={() => this.rewind(index)} position={i/count} squares={element.squares} lastMove={element.lastMove}/>\r\n                    }\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}export default UltimateTicTacToe \r\n\r\nfunction deepSlice(array){\r\n    return array.slice().map( function(row){ return row.slice(); });\r\n}\r\n\r\nfunction flattenBoard(parent, child){\r\n    let rowIndex = (child % 3) + (parent % 3) * 3;\r\n    let colIndex = Math.floor(child / 3) + Math.floor(parent / 3) * 3;        \r\n    let cellIndex = (colIndex * 9) + rowIndex;\r\n    return cellIndex;\r\n}","import './App.css';\nimport UltimateTicTacToe from './UltimateTicTacToe'\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"content\">\n      <div className=\"header\">\n            <div className=\"title\">Ultimate Tic Tac Toe</div>\n        </div>\n        <UltimateTicTacToe />\n      </div>\n      <div className=\"footer\">\n        <div className=\"info\">Made by <a href=\"https://www.linkedin.com/in/james-n-tumber\">James Tumber</a></div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}